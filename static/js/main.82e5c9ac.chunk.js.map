{"version":3,"sources":["static-data.js","constants/action-types.js","reducers/index.js","reducers/user.js","reducers/messages.js","reducers/typing.js","reducers/contacts.js","reducers/activeUserId.js","reducers/activeChatId.js","store/index.js","actions/index.js","containers/User.js","components/Sidebar.js","components/Empty.js","components/Header.js","components/Chats.js","containers/MessageInput.js","containers/ChatWindow.js","components/Main.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["numberOfUsers","users","Array","from","length","generateUser","contacts","_","mapKeys","getMessages","messagesPerUser","messages","forEach","user","numberOfMsgs","user_id","Object","objectSpread","v","i","number","text","sentence","is_user_msg","faker","random","boolean","name","findName","email","internet","profile_pic","avatar","status","shortid","generate","SET_ACTIVE_USER_ID","SET_TYPING_VALUE","SEND_MESSAGE","DELETE_CHAT","EDIT_CHAT","combineReducers","state","arguments","undefined","action","type","_action$payload","payload","message","userId","chatId","allUserMsgs","keys","pop","defineProperty","concat","messageId","activeUserId","omit","typing","userContacts","activeChatId","store","createStore","rootReducer","setActiveUserId","id","handleUserClick","_ref2","dispatch","User","_ref","react_default","a","createElement","className","onClick","bind","src","alt","Sidebar","map","contact","src_containers_User","key","Empty","Header","handleDeleteChat","getState","deleteChat","handleEditChat","e","editChat","Chat","onDoubleClick","Chats","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottom","chatsRef","current","scrollTop","scrollHeight","React","createRef","ref","Chats_Chat","Component","MessageInput","value","onSubmit","preventDefault","onChange","target","placeholder","ChatWindow","activeUser","activeMsgs","components_Header","src_components_Chats","values","src_containers_MessageInput","Main","src_containers_ChatWindow","src_components_Empty","App","_store$getState","src_components_Sidebar","src_components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","render","ReactDOM","src_containers_App","document","getElementById","subscribe","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.82e5c9ac.chunk.js","sourcesContent":["import shortid from \"shortid\"; // shortid.generate() returns a unique \"short\" id\r\nimport { sentence } from \"txtgen\"; //sentence() returns random \"readable\" sentences\r\nimport { faker } from \"@faker-js/faker\"; // faker is used for generating random fake data.\r\nimport _ from \"lodash\"; // lodash is a utility lib for Javascript\r\n\r\nconst users = generateUsers(35);\r\nexport const contacts = _.mapKeys(users, \"user_id\");\r\nexport const getMessages = (messagesPerUser) => {\r\n  let messages = {};\r\n  _.forEach(users, (user) => {\r\n    messages[user.user_id] = {\r\n      ..._.mapKeys(generateMsgs(messagesPerUser), \"number\"),\r\n    };\r\n  });\r\n  return messages;\r\n};\r\n\r\n// just an example of how the state object is structured\r\nexport const state = {\r\n  user: generateUser(),\r\n  messages: getMessages(10),\r\n  typing: \"\",\r\n  contacts,\r\n  activeUserId: null,\r\n};\r\n\r\n/**\r\n * @returns {Object} - a new user object\r\n */\r\nexport function generateUser() {\r\n  return {\r\n    name: faker.name.findName(),\r\n    email: faker.internet.email(),\r\n    profile_pic: faker.internet.avatar(),\r\n    status: sentence(),\r\n    user_id: shortid.generate(),\r\n  };\r\n}\r\n/**\r\n * @returns {Object} - a new message object\r\n */\r\nfunction generateMsg(number) {\r\n  return {\r\n    number,\r\n    text: sentence(),\r\n    is_user_msg: faker.random.boolean(),\r\n  };\r\n}\r\n/**\r\n *\r\n * @param {Number} numberOfUsers - the number of users to be generated\r\n * @param {Function} generateUser - function that generates a single user\r\n * @returns {Array} - an array of user objects with length n = numberOfUsers\r\n */\r\nfunction generateUsers(numberOfUsers) {\r\n  return Array.from({ length: numberOfUsers }, () => generateUser());\r\n}\r\n\r\nfunction generateMsgs(numberOfMsgs) {\r\n  return Array.from({ length: numberOfMsgs }, (v, i) => generateMsg(i));\r\n}\r\n","export const SET_ACTIVE_USER_ID = \"SET_ACTIVE_USER_ID\";\r\nexport const SET_TYPING_VALUE = \"SET_TYPING_VALUE\";\r\nexport const SEND_MESSAGE = \"SEND_MESSAGE\";\r\nexport const DELETE_CHAT = \"DELETE_CHAT\";\r\nexport const EDIT_CHAT = \"EDIT_CHAT\";\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user\";\r\nimport messages from \"./messages\";\r\nimport typing from \"./typing\";\r\nimport contacts from \"./contacts\";\r\nimport activeUserId from \"./activeUserId\";\r\nimport activeChatId from \"./activeChatId\";\r\n\r\nexport default combineReducers({\r\n  user,\r\n  messages,\r\n  typing,\r\n  contacts,\r\n  activeUserId,\r\n  activeChatId\r\n});\r\n","import { generateUser } from \"../static-data\";\r\n\r\nexport default function user(state = generateUser(), action) {\r\n  return state;\r\n}\r\n","import { getMessages } from \"../static-data\";\r\nimport { SEND_MESSAGE, DELETE_CHAT } from \"../constants/action-types\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function messages(state = getMessages(10), action) {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const { message, userId, chatId } = action.payload;\r\n      const allUserMsgs = state[userId];\r\n      const number = chatId || +_.keys(allUserMsgs).pop() + 1;\r\n\r\n      return {\r\n        ...state,\r\n        [userId]: {\r\n          ...allUserMsgs,\r\n          [number]: {\r\n            number,\r\n            text: chatId ? message.concat(\" (edited)\") : message,\r\n            is_user_msg: true\r\n          }\r\n        }\r\n      };\r\n\r\n    case DELETE_CHAT:\r\n      const messageId = action.payload.number;\r\n      const activeUserId = action.payload.activeUserId;\r\n\r\n      return {\r\n        ...state,\r\n        [activeUserId]: _.omit(state[activeUserId], messageId)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_TYPING_VALUE,\r\n  SEND_MESSAGE,\r\n  EDIT_CHAT\r\n} from \"../constants/action-types\";\r\n\r\nexport default function typing(state = \"\", action) {\r\n  switch (action.type) {\r\n    case SET_TYPING_VALUE:\r\n      return action.payload;\r\n    case SEND_MESSAGE:\r\n      return \"\"; //remove text from input field upon submission.\r\n    case EDIT_CHAT:\r\n      return action.payload.text;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { contacts as userContacts } from \"../static-data\";\r\n\r\nexport default function contacts(state = userContacts) {\r\n  return state;\r\n}\r\n","import { SET_ACTIVE_USER_ID } from \"../constants/action-types\";\r\n\r\nexport default function activeUserId(state = null, action) {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_USER_ID:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { EDIT_CHAT } from \"../constants/action-types\";\r\n\r\nexport default function activeUserId(state = null, action) {\r\n  switch (action.type) {\r\n    case EDIT_CHAT:\r\n      return action.payload.number;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import {\r\n  SET_ACTIVE_USER_ID,\r\n  SET_TYPING_VALUE,\r\n  SEND_MESSAGE,\r\n  DELETE_CHAT,\r\n  EDIT_CHAT\r\n} from \"../constants/action-types\";\r\n\r\nexport const setActiveUserId = id => ({\r\n  type: SET_ACTIVE_USER_ID,\r\n  payload: id\r\n});\r\n\r\nexport const setTypingValue = value => ({\r\n  type: SET_TYPING_VALUE,\r\n  payload: value\r\n});\r\n\r\nexport const sendMessage = (message, userId, chatId) => ({\r\n  type: SEND_MESSAGE,\r\n  payload: {\r\n    message,\r\n    userId,\r\n    chatId\r\n  }\r\n});\r\n\r\nexport const deleteChat = (number, activeUserId) => ({\r\n  type: DELETE_CHAT,\r\n  payload: {\r\n    number,\r\n    activeUserId\r\n  }\r\n});\r\n\r\nexport const editChat = (number, activeUserId, text) => ({\r\n  type: EDIT_CHAT,\r\n  payload: {\r\n    number,\r\n    activeUserId,\r\n    text\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport \"./User.css\";\r\nimport store from \"../store\";\r\nimport { setActiveUserId } from \"../actions\";\r\n\r\nconst User = ({ user }) => {\r\n  const { name, profile_pic } = user;\r\n\r\n  return (\r\n    <div className=\"User\" onClick={handleUserClick.bind(null, user)}>\r\n      <div className=\"User__pic-container\">\r\n      <img src={profile_pic} alt={name} className=\"User__pic\" />\r\n      <div className=\"User__status\"></div>\r\n      </div>\r\n      \r\n      <div className=\"User__details\">\r\n        <p className=\"User__details-name\">{name}</p>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction handleUserClick({ user_id }) {\r\n  store.dispatch(setActiveUserId(user_id));\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport User from \"../containers/User\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst Sidebar = ({ contacts }) => {\r\n  return (\r\n    <aside className=\"Sidebar\">\r\n      {contacts.map(contact => <User user={contact} key={contact.user_id} />)}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Empty.css\";\r\n\r\nconst Empty = () => {\r\n  \r\n  const first_name = \"Adnen\";\r\n  const profile_pic = \"https://avatars1.githubusercontent.com/u/11591834?s=460&v=4\";\r\n  const status =\"You can never understand everything. But, you should push yourself to understand the system 'Ryan Dhal'\";\r\n  return (\r\n    <div className=\"Empty\">\r\n      <h1 className=\"Empty__name\">Welcome, {first_name} </h1>\r\n      <img src={profile_pic} alt={first_name} className=\"Empty__img\" />\r\n      <p className=\"Empty__status\">\r\n        <b>Status:</b> {status}\r\n      </p>\r\n     \r\n      <p className=\"Empty__info\">\r\n        Search for someone to start chatting with or go to Contacts to see who\r\n        is available\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header({ user }) {\r\n  const { name, profile_pic, status } = user;\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n    <div className=\"User__pic-container Header__img\">\r\n      <img src={profile_pic} alt={name} className=\"User__pic\" />\r\n      <div className=\"User__status\"></div>\r\n      </div>\r\n        <div className=\"user__detail\">\r\n        <h1 className=\"Header__name\">{name}</h1>\r\n        <p className=\"Header__status\">{status}</p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { deleteChat, editChat } from \"../actions\";\r\nimport store from \"../store\";\r\nimport \"./Chats.css\";\r\n\r\nconst handleDeleteChat = number => {\r\n  const activeUserId = store.getState().activeUserId;\r\n  store.dispatch(deleteChat(number, activeUserId));\r\n};\r\nconst handleEditChat = (number, text, e) => {\r\n  const activeUserId = store.getState().activeUserId;\r\n  store.dispatch(editChat(number, activeUserId, text));\r\n};\r\n//at this point, Chat could be moved to its own file.\r\nconst Chat = ({ message }) => {\r\n  const { number, text, is_user_msg } = message;\r\n  return is_user_msg ? (\r\n    <div\r\n      className=\"Chat is-user-msg\"\r\n      onDoubleClick={handleEditChat.bind(null, number, text)}\r\n    >\r\n      <span\r\n        className=\"Chat__close\"\r\n        onClick={handleDeleteChat.bind(null, number)}\r\n      >\r\n        X\r\n      </span>\r\n      {text}\r\n    </div>\r\n  ) : (\r\n    <span className=\"Chat\">{text}</span>\r\n  );\r\n};\r\n\r\nclass Chats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chatsRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom = () => {\r\n    this.chatsRef.current.scrollTop = this.chatsRef.current.scrollHeight;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Chats\" ref={this.chatsRef}>\r\n        {this.props.messages.map(message => (\r\n          <Chat message={message} key={message.number} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chats;\r\n","import React from \"react\";\r\nimport store from \"../store\";\r\nimport { setTypingValue, sendMessage } from \"../actions\";\r\nimport \"./MessageInput.css\";\r\n\r\nconst MessageInput = ({ value }) => {\r\n  const state = store.getState(); // up here so whenever the component re-renders, the new state value is always returned.\r\n\r\n  const handleChange = e => {\r\n    store.dispatch(setTypingValue(e.target.value));\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { typing, activeUserId, activeChatId } = state;\r\n    store.dispatch(sendMessage(typing, activeUserId, activeChatId));\r\n  };\r\n\r\n  return (\r\n    <form className=\"Message\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"Message__input\"\r\n        onChange={handleChange}\r\n        value={value}\r\n        placeholder=\"write a message\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport store from \"../store\";\r\nimport Chats from \"../components/Chats\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport _ from \"lodash\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = ({ activeUserId }) => {\r\n  const state = store.getState();\r\n  const activeUser = state.contacts[activeUserId];\r\n  const activeMsgs = state.messages[activeUserId];\r\n  const { typing } = state;\r\n\r\n  return (\r\n    <div className=\"ChatWindow\">\r\n      <Header user={activeUser} />\r\n      <Chats messages={_.values(activeMsgs)} />\r\n      <MessageInput value={typing} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\nimport Empty from \"../components/Empty\";\r\nimport ChatWindow from \"../containers/ChatWindow\";\r\n\r\nconst Main = ({ user, activeUserId }) => {\r\n  const renderMainContent = () => {\r\n    if (!activeUserId) {\r\n      return <Empty user={user} />;\r\n    } else {\r\n      return <ChatWindow activeUserId={activeUserId} />;\r\n    }\r\n  };\r\n  return <main className=\"Main\">{renderMainContent()}</main>;\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Main from \"../components/Main\";\r\nimport store from \"../store\";\r\n\r\nconst App = () => {\r\n  const { contacts, user, activeUserId } = store.getState();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar contacts={_.values(contacts)} />\r\n      <Main user={user} activeUserId={activeUserId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport store from \"./store\";\r\n\r\nconst render = () => {\r\n\r\n  return ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n};\r\n\r\nrender();\r\nstore.subscribe(render);\r\nregisterServiceWorker();\r\n\r\n\r\n"],"sourceRoot":""}